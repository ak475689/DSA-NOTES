   
   //  a fee for every transaction is taken
   
    int f(int idx,int buy,vector<int>&a,int fee,vector<vector<int>>&dp){
       if(idx==a.size()){
           return 0;
       }
        if(dp[idx][buy]!=-1){
            return dp[idx][buy];
        }
       if(buy==1){
           
          return dp[idx][buy]=max(-a[idx]+f(idx+1,0,a,fee,dp),0+f(idx+1,1,a,fee,dp));    
       }
       return dp[idx][buy]=max(a[idx]-fee+f(idx+1,1,a,fee,dp),f(idx+1,0,a,fee,dp));
    }


        vector<vector<int>>dp(a.size()+1,vector<int>(2,0));
        int n=a.size();
        for(int i=n-1;i>=0;i--){
            for(int j=0;j<=1;j++){
                if(j==1){
                    dp[i][j]=max(-a[i]+dp[i+1][0],dp[i+1][1]);
                }
                else{
                    dp[i][j]=max(a[i]-fee+dp[i+1][1],dp[i+1][0]);
                }
            }
        }
        return dp[0][1];