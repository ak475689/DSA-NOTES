You are given an array prices where prices[i] is the price of a given stock on the ith day.

Find the maximum profit you can achieve. You may complete at most two transactions.

Note: You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).


class Solution {
public:
    int maxProfit(vector<int>&a) {
        int n=a.size();
        vector<int>left(n,0);
        int min1=a[0];
        for(int i=1;i<n;i++){
            left[i]=max(left[i-1],a[i]-min1);
            min1=min(min1,a[i]);
        }
        int max1=a[n-1];
        vector<int>right(n,0);
        for(int i=n-2;i>=0;i--){
            right[i]=max(right[i+1],max1-a[i]);
            max1=max(max1,a[i]);
        }
        int ans=left[n-1];
        for(int i=0;i<n-1;i++){
            ans=max(ans,left[i]+right[i+1]);
        }
        return ans;
    }
};
