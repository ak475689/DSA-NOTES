public:
   int m=1003;
    int f(string s,int i,int j,int istrue,vector<vector<vector<int>>>&dp){
        if(i>j){
            return 0;
        }
        if(i==j){
            if(istrue==1){
                return s[i]=='T';
            }
            return s[i]=='F';
        }
        if(dp[i][j][istrue]!=-1){
            return dp[i][j][istrue];
        }
        int ways=0;
        for(int k=i+1;k<j;k=k+2){
            int lt=f(s,i,k-1,1,dp);
            int lf=f(s,i,k-1,0,dp);
            int rt=f(s,k+1,j,1,dp);
            int rf=f(s,k+1,j,0,dp);
            if(s[k]=='&'){
                if(istrue){
                    ways=ways+(lt%m*rt%m)%m;
                }
                else{
                    ways=ways+(lt%m*rf%m+lf%m*rt%m+lf%m*rf%m)%m;
                }
            }
            else if(s[k]=='|'){
                if(istrue){
                    ways=ways+(lt%m*rt%m+lf%m*rt%m+lt%m*rf%m)%m;    
                }
                else{
                    ways=ways+(lf%m*rf%m)%m;
                }
            }
            else if(s[k]=='^'){
                if(istrue){
                    ways=ways+(lt%m*rf%m+rt%m*lf%m)%m;
                }
                else{
                    ways=ways+(lt%m*rt%m+rf%m*lf%m)%m;
                }
            }
        }
        return dp[i][j][istrue]=ways%m;
    }
    int countWays(int n, string s){
        vector<vector<vector<int>>>dp(n,vector<vector<int>>(n,vector<int>(2,-1)));
        int i=0;
        int j=n-1;
        return f(s,i,j,1,dp);
    }