
class Solution {
     vector<int> colors;
    vector<int>vis;
    bool dfs(int src,vector<vector<int>>& a,int c)
    {
        vis[src]=1;
        colors[src]=c;
        for(int x:a[src])
        {
            if(vis[x]==0)
            {
                if(dfs(x,a,c^1)==false)
                      return false;   
            }
            else
            {
                if(colors[src]==colors[x])
                    return false;
            }
        }
        return true;
    }
public:
    bool isBipartite(vector<vector<int>>& a) {
        int n=a.size();
        colors.resize(n);
        vis.resize(n);
        int c=0;
        for(int i=0;i<n;i++)
        {  
            if(vis[i]==0&&colors[i]==0&&dfs(i,a,c)==false)
                return false;
        }
        return true;
    }
};