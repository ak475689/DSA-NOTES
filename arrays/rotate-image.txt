
You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

 
class Solution {
    public void rotate(int[][] matrix) {
        int n = matrix.length;
        for (int i = 0; i < (n + 1) / 2; i ++) {
            for (int j = 0; j < n / 2; j++) {
                int temp = matrix[n - 1 - j][i];
                matrix[n - 1 - j][i] = matrix[n - 1 - i][n - j - 1];
                matrix[n - 1 - i][n - j - 1] = matrix[j][n - 1 -i];
                matrix[j][n - 1 - i] = matrix[i][j];
                matrix[i][j] = temp;
            }
        }
    }

  //transpose-solution
    class Solution {
public:
void rotate(vector<vector<int>>& m) {
    int n=m.size();
    for(int i=1;i<n;i++)
        for(int j=0;j<i;j++)
            swap(m[i][j],m[j][i]);
    for(int i=0;i<n;i++)
        for(int j=0;j<n/2;j++)
            swap(m[i][j],m[i][n-j-1]);
}
};