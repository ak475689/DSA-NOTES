Node * merge(Node *a,Node * b){
    if(a==nullptr){
        return b;
    }
    if(b==nullptr){
        return a;
    }
    Node * result;
    if(a->data<b->data){
        result=a;
        result->bottom=merge(a->bottom,b);
        
    }
    else{
        result=b;
        result->bottom=merge(a,b->bottom);
    }
    result->next=nullptr;
    return result;
}
Node *flatten(Node *root)
{
    if(root==nullptr||root->next==nullptr){
        return root;
    }
    return merge(root,flatten(root->next));
}



//Iterative merge

Node* mergeTwoLists(Node* a, Node* b) {
    
    Node *temp = new Node(0);
    Node *res = temp; 
    
    while(a != NULL && b != NULL) {
        if(a->data < b->data) {
            temp->bottom = a; 
            temp = temp->bottom; 
            a = a->bottom; 
        }
        else {
            temp->bottom = b;
            temp = temp->bottom; 
            b = b->bottom; 
        }
    }
    
    if(a) temp->bottom = a; 
    else temp->bottom = b; 
    
    return res -> bottom; 
    
}
Node *flatten(Node *root)
{
   
        if (root == NULL || root->next == NULL) 
            return root; 
  
        // recur for list on right 
        root->next = flatten(root->next); 
  
        // now merge 
        root = mergeTwoLists(root, root->next); 
  
        // return the root 
        // it will be in turn merged with its left 
        return root; 
}